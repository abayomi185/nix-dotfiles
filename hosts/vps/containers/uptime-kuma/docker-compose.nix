# Auto-generated using compose2nix v0.1.9.
{
  pkgs,
  lib,
  ...
}: let
  basePath = "/home/cloud/nix-dotfiles/hosts/vps/containers/uptime-kuma";
in {
  # Containers
  virtualisation.oci-containers.containers."uptime-kuma" = {
    image = "louislam/uptime-kuma:latest";
    volumes = [
      "${basePath}/data:/app/data:rw"
    ];
    ports = [
      "127.0.0.1:3001:3001/tcp"
      "10.13.13.1:3001:3001/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=uptime-kuma"
      "--network=uptime-kuma_default"
      "--security-opt=no-new-privileges:true"
    ];
  };
  systemd.services."podman-uptime-kuma" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "always";
    };
    after = [
      "podman-network-uptime-kuma_default.service"
    ];
    requires = [
      "podman-network-uptime-kuma_default.service"
    ];
    partOf = [
      "podman-compose-uptime-kuma-root.target"
    ];
    wantedBy = [
      "podman-compose-uptime-kuma-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-uptime-kuma_default" = {
    path = [pkgs.podman];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "${pkgs.podman}/bin/podman network rm -f uptime-kuma_default";
    };
    script = ''
      podman network inspect uptime-kuma_default || podman network create uptime-kuma_default
    '';
    partOf = ["podman-compose-uptime-kuma-root.target"];
    wantedBy = ["podman-compose-uptime-kuma-root.target"];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-uptime-kuma-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
