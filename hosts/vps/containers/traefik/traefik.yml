################################################################
#
# Configuration sample for Traefik v2.
#
# For Traefik v1: https://github.com/traefik/traefik/blob/v1.7/traefik.sample.toml
#
################################################################

################################################################
# Global configuration
################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: false

# pilot:
  # token: "be633b82-7d32-40fb-8a1d-f8a2b2c47cee"

################################################################
# EntryPoints configuration
################################################################

# EntryPoints definition
#
# Optional
#
entryPoints:
  web:
    address: :80
    http:
      middlewares:
        - rate_limit@file
      # forwardedHeaders:
      #   trustedIPs:
      #     - "10.13.13.1/24"
    # Catch all redirect 
    # http:
    #   redirections:
    #     entryPoint:
    #       to: websecure
    #       scheme: https

  websecure:
    address: :443
    http:
      middlewares:
        - rate_limit@file
      # forwardedHeaders:
      #   trustedIPs:
      #     - "10.13.13.1/24"
      tls:
        domains:
          - main: '{{ env "MEDIA_DOMAIN_NAME" }}'
            sans: '*.{{ env "MEDIA_DOMAIN_NAME" }}'
          - main: '{{ env "BLOG_DOMAIN_NAME" }}'
            sans: '*.{{ env "BLOG_DOMAIN_NAME" }}'
          - main: '{{ env "INTERNAL_DOMAIN_NAME" }}'
            sans: '*.{{ env "INTERNAL_DOMAIN_NAME" }}'


serversTransport:
  insecureSkipVerify: true

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
log:
  # Log level
  #
  # Optional
  # Default: "ERROR"
  #
  # level: DEBUG
  level: ERROR

  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
#  filePath: log/traefik.log

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
#  format: json

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
accessLog:
  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
 filePath: "/logs/log.txt"
 bufferingSize: 10

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
#  format: json

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
#
# Optional
#
api:
  # Enable the API in insecure mode
  #
  # Optional
  # Default: false
  #
#  insecure: true

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  dashboard: true

################################################################
# Ping configuration
################################################################

# Enable ping
#ping:
  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
#  entryPoint: traefik

################################################################
# Certificate Resolvers
################################################################

certificatesResolvers:
  letsencrypt:
    acme:
      storage: "/etc/traefik/acme/acme.json"
      dnsChallenge:
        provider: cloudflare
        delayBeforeCheck: 60
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
  letsencrypt-duckdns:
    acme:
      storage: "/etc/traefik/acme/acme_duckdns.json"
      httpChallenge:
        entryPoint: web

################################################################
# Docker configuration backend
################################################################

providers:
  # Enable Docker configuration backend
  docker:
    # Docker server endpoint. Can be a tcp or a unix socket endpoint.
    #
    # Required
    # Default: "unix:///var/run/docker.sock"
    #
    #    endpoint: tcp://10.10.10.10:2375

    endpoint: "unix:///var/run/docker.sock"

    # Default host rule.
    #
    # Optional
    # Default: "Host(`{{ normalize .Name }}`)"
    #
    #    defaultRule: Host(`{{ normalize .Name }}.docker.localhost`)

    # Expose containers by default in traefik
    #
    # Optional
    # Default: true
    #
    exposedByDefault: false

  file:
    directory: "/etc/traefik/file-provider"
    watch: true

  # file:
  #   directory: "/etc/traefik/file-provider/middleware"
  #   watch: true

# experimental:
#   hub: true

# hub:
#   tls:
#     insecure: true

metrics:
  prometheus:
    addRoutersLabels: true
