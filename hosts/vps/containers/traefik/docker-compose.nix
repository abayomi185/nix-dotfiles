# Auto-generated using compose2nix v0.2.1-pre.
{
  config,
  inputs,
  lib,
  pkgs,
  ...
}: let
  basePath = "/home/cloud/nix-dotfiles/hosts/vps/containers/traefik";
in {
  # Secrets
  age.secrets.vps_containers_traefik.file = "${inputs.nix-secrets}/hosts/vps/containers/traefik/env.age";

  # Containers
  virtualisation.oci-containers.containers."traefik" = {
    image = "traefik:v2.9";
    environmentFiles = [
      config.age.secrets.vps_containers_traefik.path
    ];
    volumes = [
      "${basePath}/acme:/etc/traefik/acme:rw"
      "${basePath}/file-provider:/etc/traefik/file-provider:ro"
      "${basePath}/logs:/logs:rw"
      "${basePath}/traefik.yml:/etc/traefik/traefik.yml:ro"
      "/run/podman/podman.sock:/var/run/docker.sock:ro"
    ];
    ports = [
      "80:80/tcp"
      "443:443/tcp"
    ];
    log-driver = "journald";
    # extraOptions = [
    #   "--add-host=host.docker.internal:host-gateway"
    #   "--network=host"
    # ];
  };
  systemd.services."podman-traefik" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "always";
    };
    partOf = [
      "podman-compose-traefik-root.target"
    ];
    wantedBy = [
      "podman-compose-traefik-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-traefik-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
